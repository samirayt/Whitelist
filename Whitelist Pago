local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()

local Window = Rayfield:CreateWindow({
	Name = "Rayfield Example Window",
	LoadingTitle = "BlackHubV1",
	LoadingSubtitle = "by BlackHub",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = "BlackHub",
		FileName = "Black Hub V1"
	},
	KeySystem = false, -- Set this to true to use their key system
	KeySettings = {
		Title = "BlackHub",
		Subtitle = "Black Hub V1",
		Note = "   ",
		SaveKey = true,
		Key = "BlackHub"
	}
})

Rayfield:Notify("BlackHub", "Content/Description Example", 4483362458) -- Notfication -- Title, Content, Image

local Tab = Window:CreateTab("Tab Example", 4483362458) -- Title, Image

local Section = Tab:CreateSection("Auto Parry")

local Toggle = Tab:CreateToggle({
	Name = "Auto Parry",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
local function startAutoParry()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local runService = game:GetService("RunService")
    local parryButtonPress = replicatedStorage.Remotes.ParryButtonPress
    local ballsFolder = workspace:WaitForChild("Balls")

    print(".")

    local function onCharacterAdded(newCharacter)
        character = newCharacter
    end

    player.CharacterAdded:Connect(onCharacterAdded)

    local focusedBall = nil  

    local function chooseNewFocusedBall()
        local balls = ballsFolder:GetChildren()
        focusedBall = nil
        for _, ball in ipairs(balls) do
            if ball:GetAttribute("realBall") == true then
                focusedBall = ball
                break
            end
        end
    end

    chooseNewFocusedBall()

    local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)
        local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit
        local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)
        
        if velocityTowardsPlayer <= 0 then
            return math.huge
        end
        
        local distanceToBeCovered = distanceToPlayer - 40
        return distanceToBeCovered / velocityTowardsPlayer
    end

    local BASE_THRESHOLD = 0.15
    local VELOCITY_SCALING_FACTOR = 0.002

    local function getDynamicThreshold(ballVelocityMagnitude)
        local adjustedThreshold = BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR)
        return math.max(0.12, adjustedThreshold)
    end

    local function checkBallDistance()
        if not character:FindFirstChild("Highlight") then return end
        local charPos = character.PrimaryPart.Position
        local charVel = character.PrimaryPart.Velocity

        if focusedBall and not focusedBall.Parent then
            chooseNewFocusedBall()
        end

        if not focusedBall then return end

        local ball = focusedBall
        local distanceToPlayer = (ball.Position - charPos).Magnitude

        if distanceToPlayer <= 12 then
            parryButtonPress:Fire()
            return
        end

        local timeToImpact = timeUntilImpact(ball.Velocity, distanceToPlayer, charVel)
        local dynamicThreshold = getDynamicThreshold(ball.Velocity.Magnitude)

        if timeToImpact < dynamicThreshold then
            parryButtonPress:Fire()
        end
    end
    heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
        checkBallDistance()
    end)
end

local function stopAutoParry()
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
        heartbeatConnection = nil
    end
end
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "EmojiCustomizado",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	_G.EmojiCustom = Value
wait()
while _G.EmojiCustom == true do
 wait(1)
 local args = {
    [1] = true,
    [2] = "Empyrean"
}

game:GetService("ReplicatedStorage").Remotes.CustomEmote:FireServer(unpack(args))

 end
  end,
 })
 
 local Toggle = Tab:CreateToggle({
	Name = "Gui Spam parry",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	local gui = Instance.new("ScreenGui")
  gui.ResetOnSpawn = false
  gui.Parent = game.CoreGui
  
  local frame = Instance.new("Frame")
  frame.Position = UDim2.new(0, 40, 0, 40)
  frame.Size = UDim2.new(0, 70, 0, 50)
  frame.BackgroundColor3 = Color3.new(0, 0, 0)
  frame.BorderSizePixel = 0
  frame.Parent = gui
  
  local button = Instance.new("TextButton")
  button.Text = "Deactivate"
  button.Size = UDim2.new(1, -10, 1, -10)
  button.Position = UDim2.new(0, 20, 0, 20)
  button.BackgroundColor3 = Color3.new(1, 1, 1)
  button.BorderColor3 = Color3.new(0, 0, 0)
  button.BorderSizePixel = 1
  button.Font = Enum.Font.SourceSans
  button.TextColor3 = Color3.new(0, 0, 0)
  button.TextSize = 16
  button.Parent = frame
  
  local activated = false
  
  local function toggle()
    activated = not activated
    button.Text = activated and "Activate" or "Deactivate"
    while activated do
      local args = {
        [1] = 0.001,
        [2] = CFrame.new(-254.2939910888672, 112.13581848144531, -119.27256774902344) * CFrame.Angles(-2.029526710510254, 0.5662040710449219, 2.314905881881714),
        [3] = {
          ["2617721424"] = Vector3.new(-273.400146484375, -724.8031005859375, -20.92414093017578),
        },
        [4] = {
          [1] = 910,
          [2] = 154
        }
      }
      game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))
      game:GetService("RunService").Heartbeat:Wait(0.001)
    end
  end
  
  button.MouseButton1Click:Connect(toggle)
  
  -- Adicionar keybind "E" para ativar o botÃ£o
  local UserInputService = game:GetService("UserInputService")
  local eKeyPressed = false
  
  UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.E and not gameProcessedEvent then
      eKeyPressed = true
      toggle()
    end
  end)
  
  UserInputService.InputEnded:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.E then
      eKeyPressed = false
    end
  end)
  
  local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
  local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
  
  Notification:Notify(
    {Title = "Paid Black Hub V1", Description = "Obrigado por estar usando o nosso script    /   Black Hub"},
    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "option"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function(State) print(tostring(State)) end}
  )
	end,
})

local Toggle = Tab:CreateToggle({
	Name = "OlharBola",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
	local function StareBall()
  while getgenv().StareBall do task.wait()
    local Balls = workspace:WaitForChild("Balls", 10):GetChildren()
    for i,ball in pairs(Balls) do
      if ball:IsA("Part") and i < 2 then
        local plr = game.Players.LocalPlayer
        local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")
        if plrRP then
              local plrPos = plrRP.Position
              local ballPos = ball.Position
              local modTPos = Vector3.new(ballPos.X, plrPos.Y, ballPos.Z)
              local newCF = CFrame.new(plrPos, modTPos)
              plrRP.CFrame = newCF
            end
        end
    end
  end
end,
})

local Label = Tab:CreateLabel("Misc")

local Toggle = Tab:CreateToggle({
	Name = "Spam Freze",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
    loadstring(game:HttpGet("https://raw.githubusercontent.com/JSPSSS/ssssssssssss/main/freezing%20out%20here"))()
end,
})

local Toggle = Tab:CreateToggle({
	Name = "Bola Esp",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
loadstring(game:HttpGet("https://raw.githubusercontent.com/samirayt/Tgg/main/Yotu"))()
end,
})
