--Remover AntiCheat

print("Bypassing Security Checks..")

game:GetService("ReplicatedStorage").Security.RemoteEvent:Destroy()
game:GetService("ReplicatedStorage").Security[""]:Destroy()
game:GetService("ReplicatedStorage").Security:Destroy()
game:GetService("Players").LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()

--Codigos esps

local function ESP_Ball()
  while getgenv().ESP_Ball == true do task.wait()
    local plr = game.Players.LocalPlayer
    local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")
    for ___,ball in pairs(workspace:WaitForChild("Balls", 10):GetChildren()) do
      if ball and ball:IsA("Part") and ball:GetAttribute("realBall") == true and not ball:FindFirstChild("ESP_samirayt") then
        
        local Folder = Instance.new("Folder", ball)
        local BHA = Instance.new("BoxHandleAdornment",Folder)
        local BillboardGui = Instance.new("BillboardGui", BHA)
        local TextLabel = Instance.new("TextLabel", BillboardGui)
        Folder.Name = "ESP_samirayt"
        
        BHA.Size = Vector3.new(1,0, 1,0)
        BHA.Name = "ESP_samirayt"
        BHA.AlwaysOnTop = true
        BHA.ZIndex = 10
        BHA.Transparency = 0
        
        BillboardGui.Adornee = ball
        BillboardGui.Size = UDim2.new(0, 100, 0, 150)
        BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
        BillboardGui.AlwaysOnTop = true
        
        TextLabel.BackgroundTransparency = 1
        TextLabel.Position = UDim2.new(0, 0, 0, -50)
        TextLabel.Size = UDim2.new(0, 100, 0, 100)
        TextLabel.TextSize = 10
        TextLabel.TextColor3 = Color3.new(1, 1, 1)
        TextLabel.TextStrokeTransparency = 0
        TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
        TextLabel.Text = "Ball <...>"
        TextLabel.ZIndex = 15
        TextLabel.TextColor3 = Color3.fromRGB(0,255,0)
        
        task.spawn(function()
          while task.wait() do
            local plr = game.Players.LocalPlayer
            local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")
            if plrRP and ball then
              local distance = math.floor((plrRP.Position - ball.Position).Magnitude)
              TextLabel.Text = "Ball <" .. tostring(distance) .. ">"
            end
          end
        end)
      end
    end
  end
  task.wait()
  for _,v in pairs(workspace:WaitForChild("Balls", 10):GetChildren()) do
    if v:FindFirstChild("ESP_samirayt") then
      v:Destroy()
    end
  end
end

local function ESP_plr()
  while getgenv().ESP_plr == true do task.wait()
    local plr1 = game.Players.LocalPlayer
    for _,plr in pairs(game.Players:GetPlayers()) do
      if plr.Name ~= plr1.Name and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and not plr.Character:FindFirstChild("ESP_samirayt") and workspace:WaitForChild("Alive", 60):FindFirstChild(plr.Name) then
        
        local Folder = Instance.new("Folder", plr.Character)
        local BHA = Instance.new("BoxHandleAdornment", Folder)
        local BillboardGui = Instance.new("BillboardGui", BHA)
        local TextLabel = Instance.new("TextLabel", BillboardGui)
        Folder.Name = "ESP_samirayt"
        
        BHA.Size = Vector3.new(1, 0, 1, 0)
        BHA.Name = "ESP_samirayt"
        BHA.AlwaysOnTop = true
        BHA.ZIndex = 10
        BHA.Transparency = 0
        
        BillboardGui.Adornee = plr.Character.HumanoidRootPart
        BillboardGui.Size = UDim2.new(0, 100, 0, 150)
        BillboardGui.StudsOffset = Vector3.new(0, 1, 0)
        BillboardGui.AlwaysOnTop = true
        
        TextLabel.BackgroundTransparency = 1
        TextLabel.Position = UDim2.new(0, 0, 0, -50)
        TextLabel.Size = UDim2.new(0, 100, 0, 100)
        TextLabel.TextSize = 10
        TextLabel.TextColor3 = Color3.new(1, 1, 1)
        TextLabel.TextStrokeTransparency = 0
        TextLabel.TextYAlignment = Enum.TextYAlignment.Bottom
        TextLabel.Text = plr.Name .. " <...>"
        TextLabel.ZIndex = 15
        TextLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        
        task.spawn(function()
          while task.wait() do
            local plrRP = plr1.Character:FindFirstChild("HumanoidRootPart")
            if plr1 and plrRP and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
              local distance = math.floor((plrRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude)
              TextLabel.Text = plr.Name .. " <" .. tostring(distance) .. ">"
            end
          end
        end)
      end
    end
  end
  task.wait()
  for _,plr in pairs(game.Players:GetPlayers()) do
    if plr and plr.Character and plr.Character:FindFirstChild("ESP_samiyt") then
      plr.Character.ESP_samirayt:Destroy()
    end
  end
end

--AutoParry

local function startAutoParry()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local replicatedStorage = game:GetService("ReplicatedStorage")
    local runService = game:GetService("RunService")
    local parryButtonPress = replicatedStorage.Remotes.ParryButtonPress
    local ballsFolder = workspace:WaitForChild("Balls")

    print(".")

    local function onCharacterAdded(newCharacter)
        character = newCharacter
    end

    player.CharacterAdded:Connect(onCharacterAdded)

    local focusedBall = nil  

    local function chooseNewFocusedBall()
        local balls = ballsFolder:GetChildren()
        focusedBall = nil
        for _, ball in ipairs(balls) do
            if ball:GetAttribute("realBall") == true then
                focusedBall = ball
                break
            end
        end
    end

    chooseNewFocusedBall()

    local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)
        local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit
        local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)
        
        if velocityTowardsPlayer <= 0 then
            return math.huge
        end
        
        local distanceToBeCovered = distanceToPlayer - 40
        return distanceToBeCovered / velocityTowardsPlayer
    end

    local BASE_THRESHOLD = 0.15
    local VELOCITY_SCALING_FACTOR = 0.002

    local function getDynamicThreshold(ballVelocityMagnitude)
        local adjustedThreshold = BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR)
        return math.max(0.12, adjustedThreshold)
    end

    local function checkBallDistance()
        if not character:FindFirstChild("Highlight") then return end
        local charPos = character.PrimaryPart.Position
        local charVel = character.PrimaryPart.Velocity

        if focusedBall and not focusedBall.Parent then
            chooseNewFocusedBall()
        end

        if not focusedBall then return end

        local ball = focusedBall
        local distanceToPlayer = (ball.Position - charPos).Magnitude

        if distanceToPlayer <= 10 then
            parryButtonPress:Fire()
            return
        end

        local timeToImpact = timeUntilImpact(ball.Velocity, distanceToPlayer, charVel)
        local dynamicThreshold = getDynamicThreshold(ball.Velocity.Magnitude)

        if timeToImpact < dynamicThreshold then
            parryButtonPress:Fire()
        end
    end
    heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function()
        checkBallDistance()
    end)
end

local function stopAutoParry()
    if heartbeatConnection then
        heartbeatConnection:Disconnect()
        heartbeatConnection = nil
    end
end

--Codes

local function Codes()

local args = {
    [1] = "UPD250COINS"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "UPDATE.DAY"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "1.5BTHANKS"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "HAPPYHALLOWEEN"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "1BVISITSTHANKS"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "3MLIKES"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "HALLOWEEN"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "RRRANKEDDD"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))

local args = {
    [1] = "WEEK4"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RF/RedeemCode"):InvokeServer(unpack(args))


end

--spam

function Spam() spawn(function () while getgenv().Spam do
local args = {[1] = 1.5,[2] = CFrame.new(-409.506591796875, 68.28494262695312, -53.9754753112793) * CFrame.Angles(-0.5642477869987488, -0.1643802374601364, -0.10319763422012329),
[3] = {[game.Players.LocalPlayer.UserId] = Vector3.new(0, 0, 0),},[4] = {[1] = 1000,[2] = 1000}} game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args)) task.wait()
        end
    end)
end

--noclip

function noClip()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local rootPart = character:FindFirstChild("HumanoidRootPart") or character.PrimaryPart

    local function isDescendantOfTerrain(part)
        local terrain = game.Workspace.Terrain
        return terrain and terrain:IsAncestorOf(part)
    end

    game:GetService("RunService").Stepped:Connect(function()
        if noClipEnabled then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") and not isDescendantOfTerrain(part) then
                    part.CanCollide = false
                end
            end
        end
    end)
end 

--OlharBola

local function StareBall()
  while getgenv().StareBall do task.wait()
    local Balls = workspace:WaitForChild("Balls", 10):GetChildren()
    for i,ball in pairs(Balls) do
      if ball:IsA("Part") and i < 2 then
        local plr = game.Players.LocalPlayer
        local plrRP = plr.Character:FindFirstChild("HumanoidRootPart")
        if plrRP then
              local plrPos = plrRP.Position
              local ballPos = ball.Position
              local modTPos = Vector3.new(ballPos.X, plrPos.Y, ballPos.Z)
              local newCF = CFrame.new(plrPos, modTPos)
              plrRP.CFrame = newCF
            end
        end
    end
  end
end

--EmojiCustom

local function Emoji()
while _G.EmojiCustom == true do
 wait(2)
 local args = {
    [1] = true,
    [2] = "Empyrean"
}

game:GetService("ReplicatedStorage").Remotes.CustomEmote:FireServer(unpack(args))

end
end

--AutoVotar

local function Votar()
while _G.AutoVotar == true do
 wait(2)
 if VotarEscolhido == "Classico" then
  local args = {
    [1] = "FFA"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RE/UpdateVotes"):FireServer(unpack(args))

 end
 
  if VotarEscolhido == "2 times" then
   local args = {
    [1] = "Team2"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RE/UpdateVotes"):FireServer(unpack(args))

  end
  
   if VotarEscolhido == "4 times" then
    local args = {
    [1] = "Team4"
}

game:GetService("ReplicatedStorage").Packages._Index:FindFirstChild("sleitnick_net@0.1.0").net:FindFirstChild("RE/UpdateVotes"):FireServer(unpack(args))

   end
end
end
--AutoBox01
local function Box01()
while _G.AutoOpenBox01 == true do
 wait(1)
local args = {
    [1] = "PromptPurchaseCrate",
    [2] = workspace.Spawn.Crates.NormalSwordCrate
}

game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer(unpack(args))
end
end

--AutoBox02
local function Box02()
while _G.AutoOpenBox02 == true do
 wait(1)
local args = {
    [1] = "PromptPurchaseCrate",
    [2] = workspace.Spawn.Crates.NormalExplosionCrate
}

game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer(unpack(args))
end
end

loadstring(game:HttpGet(("https://raw.githubusercontent.com/REDzHUB/LibraryV2/main/redzLib")))()

local workspace = game:GetService("Workspace")
local players = game:GetService("Players")
local localPlayer = players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local replicatedStorage = game:GetService("ReplicatedStorage")
local heartbeatConnection

MakeWindow({
  Hub = {
    Title = "Berserk Hub",
    Animation = "Berserk Hub : BladeBall"
  },
  Key = {
    KeySystem = false,
    Title = "Key System",
    Description = "",
    KeyLink = "",
    Keys = {"1234"},
    Notifi = {
      Notifications = true,
      CorrectKey = "Running the Script...",
      Incorrectkey = "The key is incorrect",
      CopyKeyLink = "Copied to Clipboard"
    }
  }
})

MinimizeButton({
  Image = "",
  Size = {75, 40},
  Color = Color3.fromRGB(10, 10, 10),
  Corner = true,
  Stroke = true,
  StrokeColor = Color3.fromRGB(255, 255, 255)
})

--Tabs

local Main = MakeTab({Name = "Principal"})

local Player = MakeTab({Name = "Jogador"})

local Shop = MakeTab({Name = "Loja"})

local Visual = MakeTab({Name = "Visual"})

local Misc = MakeTab({Name = "Misc"})

local section01 = AddSection(Main, {"AutoRebater"})

local ToggleParry = AddToggle(Main, {
  Name = "AutoParry",
  Default = false,
  Callback = function(Value)
    if Value then
            startAutoParry()
            
        else
            stopAutoParry()
            
        end
  end
})

local Toggle = AddToggle(Main, {
  Name = "Auto Rapture",
  Default = false,
  Callback = function(Value)
  local function chooseNewFocusedBall()
    local balls = ballsFolder:GetChildren()
    for _, ball in ipairs(balls) do
        if ball:GetAttribute("realBall") ~= nil and ball:GetAttribute("realBall") == true then
            focusedBall = ball
            print(focusedBall.Name)
            break
        elseif ball:GetAttribute("target") ~= nil then
            focusedBall = ball
            print(focusedBall.Name)
            break
        end
    end
    
    if focusedBall == nil then
        print("Debug: Could not find a ball that's the realBall or has a target.")
        wait(1)
        chooseNewFocusedBall()
    end
    return focusedBall
end

local function getDynamicThreshold(ballVelocityMagnitude)
    if ballVelocityMagnitude > 60 then
        return math.max(25, BASE_THRESHOLD - (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_FAST))
    else
        return math.min(10, BASE_THRESHOLD + (ballVelocityMagnitude * VELOCITY_SCALING_FACTOR_SLOW))
    end
end

local function timeUntilImpact(ballVelocity, distanceToPlayer, playerVelocity)
    if not character then return end
    local directionToPlayer = (character.HumanoidRootPart.Position - focusedBall.Position).Unit
    local velocityTowardsPlayer = ballVelocity:Dot(directionToPlayer) - playerVelocity:Dot(directionToPlayer)
    
    if velocityTowardsPlayer <= 10 then
        return math.huge
    end
    
    return (distanceToPlayer - sliderValue) / velocityTowardsPlayer
end

local function updateDistanceVisualizer()
    local charPos = character and character.PrimaryPart and character.PrimaryPart.Position
    if charPos and focusedBall then
        if distanceVisualizer then
            distanceVisualizer:Destroy()
        end

        local timeToImpactValue = timeUntilImpact(focusedBall.Velocity, (focusedBall.Position - charPos).Magnitude, character.PrimaryPart.Velocity)
        local ballFuturePosition = focusedBall.Position + focusedBall.Velocity * timeToImpactValue

        distanceVisualizer = Instance.new("Part")
        distanceVisualizer.Size = Vector3.new(1, 1, 1)
        distanceVisualizer.Anchored = true
        distanceVisualizer.CanCollide = false
        distanceVisualizer.Position = ballFuturePosition
        distanceVisualizer.Parent = workspace    
    end
end

local function checkIfTarget()
    for _, v in pairs(ballsFolder:GetChildren()) do
        if v:IsA("Part") and v.BrickColor == BrickColor.new("Really red") then 
            print("Ball is targetting player.")
            return true 
        end 
    end 
    return false
end

local function isCooldownInEffect(uigradient)
    return uigradient.Offset.Y < 0.5
end


local function checkBallDistance()
    if not character or not checkIfTarget() then return end

    local charPos = character.PrimaryPart.Position
    local charVel = character.PrimaryPart.Velocity

    if focusedBall and not focusedBall.Parent then
        print("Focused ball lost parent. Choosing a new focused ball.")
        chooseNewFocusedBall()
    end
    if not focusedBall then 
        print("No focused ball.")
        chooseNewFocusedBall()
    end

    local ball = focusedBall
    local distanceToPlayer = (ball.Position - charPos).Magnitude
    local ballVelocityTowardsPlayer = ball.Velocity:Dot((charPos - ball.Position).Unit)
    
    if distanceToPlayer < 15 then
        parryButtonPress:Fire()
        task.wait()
    end

    if timeUntilImpact(ball.Velocity, distanceToPlayer, charVel) < getDynamicThreshold(ballVelocityTowardsPlayer) then
        if (character.Abilities["Raging Deflection"].Enabled or character.Abilities["Rapture"].Enabled) and UseRage == true then
            if not isCooldownInEffect(uigrad2) then
                abilityButtonPress:Fire()
            end

            if isCooldownInEffect(uigrad2) and not isCooldownInEffect(uigrad1) then
                parryButtonPress:Fire()
                if notifyparried == true then
                    notify("Auto Parry", "Manually Parried Ball (Ability on CD)", 0.3)
                end
            end

        elseif not isCooldownInEffect(uigrad1) then
            print(isCooldownInEffect(uigrad1))
            parryButtonPress:Fire()
            if notifyparried == true then
                notify("Auto Parry", "Automatically Parried Ball", 0.3)
            end
            task.wait(0.3)
        end
    end
end


local function autoParryCoroutine()
    while isRunning do
        checkBallDistance()
        updateDistanceVisualizer()
        task.wait()
    end
end



localPlayer.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    chooseNewFocusedBall()
    updateDistanceVisualizer()
end)

localPlayer.CharacterRemoving:Connect(function()
    if distanceVisualizer then
        distanceVisualizer:Destroy()
        distanceVisualizer = nil
    end
end)



local function startAutoParry()
    print("Script successfully ran.")
    
    chooseNewFocusedBall()
    
    isRunning = true
    local co = coroutine.create(autoParryCoroutine)
    coroutine.resume(co)
end

local function stopAutoParry()
    isRunning = false
end
    end
})

local Toggle = AddToggle(Main, {
  Name = "Auto gg",
  Default = false,
  Callback = function(Value)
  local responses = {"Larga de Ser ruim kkk", "Ruim kkk", "Jogou Nada", "Um Noob", "Iniciante??", "skill issue", "cry"}
local gameEndResponses = {"ggs", "gg :3", "good game", "ggs yall", "wp", "ggs man"}
end
})

--Codigo

local MobileToggle = AddMobileToggle({
  Name = "Spam",
  Visible = false,
  Callback = function(val)
    getgenv().Spam = val
       Spam()
  end
})

local Toggle = AddToggle(Main, {
  Name = "Spam Atalho",
  Default = false,
  Callback = function(Value)
    MobileToggle.Visible = Value
  end
})

local Toggle = AddToggle(Main, {
  Name = "Manual SpamV1",
  Default = false,
  Callback = function(Value)
  local gui = Instance.new("ScreenGui")
  gui.ResetOnSpawn = false
  gui.Parent = game.CoreGui
  
  local frame = Instance.new("Frame")
  frame.Position = UDim2.new(0, 40, 0, 40)
  frame.Size = UDim2.new(0, 70, 0, 50)
  frame.BackgroundColor3 = Color3.new(0, 0, 0)
  frame.BorderSizePixel = 0
  frame.Parent = gui
  
  local button = Instance.new("TextButton")
  button.Text = "Deactivate"
  button.Size = UDim2.new(1, -10, 1, -10)
  button.Position = UDim2.new(0, 20, 0, 20)
  button.BackgroundColor3 = Color3.new(1, 1, 1)
  button.BorderColor3 = Color3.new(0, 0, 0)
  button.BorderSizePixel = 1
  button.Font = Enum.Font.SourceSans
  button.TextColor3 = Color3.new(0, 0, 0)
  button.TextSize = 16
  button.Parent = frame
  
  local activated = false
  
  local function toggle()
    activated = not activated
    button.Text = activated and "Activate" or "Deactivate"
    while activated do
      local args = {
        [1] = 0.001,
        [2] = CFrame.new(-254.2939910888672, 112.13581848144531, -119.27256774902344) * CFrame.Angles(-2.029526710510254, 0.5662040710449219, 2.314905881881714),
        [3] = {
          ["2617721424"] = Vector3.new(-273.400146484375, -724.8031005859375, -20.92414093017578),
        },
        [4] = {
          [1] = 910,
          [2] = 154
        }
      }
      game:GetService("ReplicatedStorage").Remotes.ParryAttempt:FireServer(unpack(args))
      game:GetService("RunService").Heartbeat:Wait(0.001)
    end
  end
  
  button.MouseButton1Click:Connect(toggle)
  
  -- Adicionar keybind "E" para ativar o botão
  local UserInputService = game:GetService("UserInputService")
  local eKeyPressed = false
  
  UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.E and not gameProcessedEvent then
      eKeyPressed = true
      toggle()
    end
  end)
  
  UserInputService.InputEnded:Connect(function(input, gameProcessedEvent)
    if input.KeyCode == Enum.KeyCode.E then
      eKeyPressed = false
    end
  end)
  
  local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
  local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()
  
  Notification:Notify(
    {Title = "Paid Black Hub V1", Description = "Obrigado por estar usando o nosso script    /   Black Hub"},
    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "option"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function(State) print(tostring(State)) end}
  )
end
})

AddKeybind(Main, {
  Name = "Spam Pc",
  KeyCode = "E",
  Default = false,
  Callback = function(Value)
    parryButtonPress:Fire().Heartbeat:Wait(0.001).Heartbeat:Wait(0.001).Heartbeat:Wait(0.001)
  end
})

local Toggle = AddToggle(Main, {
  Name = "Olhar Pra Bola",
  Default = false,
  Callback = function(Value)
   getgenv().StareBall = state
    StareBall()
  end
})

local Toggle = AddToggle(Main, {
  Name = "EmojiCustomizado",
  Default = false,
  Callback = function(Value)
   _G.EmojiCustom = Value
   Emoji()
  end
})

local Dropdownpet = AddDropdown(Main, {
  Name = "Escolha o Modo",
  Options = {"Classico", "2 times", "4 times"},
  Default = "Nenhum",
  Callback = function(Value)
    VotarEscolhido = Value
  end
})

local ToggleVote = AddToggle(Main, {
  Name = "AutoVotar",
  Default = false,
  Callback = function(Value)
   _G.AutoVotar = Value
   Votar()
  end
})

--Tab02

local Slider01 = AddSlider(Player, {
  Name = "<< Velocidade <Padrão 36>",
  MinValue = 15,
  MaxValue = 250,
  Default = 36,
  Increase = 5,
  Callback = function(v)
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = v
  end
})

local Toggle4 = AddToggle(Player, {
  Name = "Atravessar Paredes",
  Default = false,
  Callback = function(Value)
   noClipEnabled = Value
           noClip()
  end
})


--Tab03

local sectionButtone = AddSection(Visual, {"ESP"})

local Toggle5 = AddToggle(Visual, {
  Name = "Player ESP",
  Default = false,
  Callback = function(Value)
   getgenv().ESP_plr = Value
    ESP_plr()
  end
})

local Toggle6 = AddToggle(Visual, {
  Name = "Bola ESP",
  Default = false,
  Callback = function(Value)
   getgenv().ESP_Ball = Value
    ESP_Ball()
  end
})


--Tab04

local sectionButton = AddSection(Shop, {"Comprar"})

AddButton(Shop, {
  Name = "ComprarCaixa Espada",
  Callback = function()
    local args = {
    [1] = "PromptPurchaseCrate",
    [2] = workspace.Spawn.Crates.NormalSwordCrate
}

game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer(unpack(args))

  end
})

AddButton(Shop, {
  Name = "ComprarCaixa Explosão",
  Callback = function()
    local args = {
    [1] = "PromptPurchaseCrate",
    [2] = workspace.Spawn.Crates.NormalExplosionCrate
}

game:GetService("ReplicatedStorage").Remote.RemoteFunction:InvokeServer(unpack(args))
  end
})

local sectionToggle = AddSection(Shop, {"AutoComprar"})

local Toggle34 = AddToggle(Shop, {
  Name = "AutoComprarCaixa Espada",
  Default = false,
  Callback = function(Value)
   _G.AutoOpenBox01 = Value
   Box01()
  end
})

local Toggle34 = AddToggle(Shop, {
  Name = "AutoComprarCaixa Explosão",
  Default = false,
  Callback = function(Value)
  _G.AutoOpenBox02 = Value
  Box02()
  end
})

--Tab05

local sectionTejej = AddSection(Misc, {"Códigos"})

AddButton(Misc, {
  Name = "Coletar Todos os Códigos",
  Callback = function()
   Codes()
  end
})

local sectionJ9go = AddSection(Misc, {">>Jogo<<"})

AddButton(Misc, {
  Name = "Re-Entrar",
  Callback = function()
   loadstring(game:HttpGet("https://pastebin.com/raw/mM7JBG5h", true))() 
  end
})
